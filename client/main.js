import { Template } from 'meteor/templating';
import { ReactiveVar } from 'meteor/reactive-var';
import payontime_artifacts from './lib/Payontime.json';
import './main.html';

var payontime = web3.eth.contract(payontime_artifacts);
var bytecode = "6060604052604060405190810160405280600581526020017f66616c7365000000000000000000000000000000000000000000000000000000815250600390805190602001906100509291906101b3565b5060405160208061052f833981016040528080519060200190919050505b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460028190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604060405190810160405280600781526020017f7375636365737300000000000000000000000000000000000000000000000000815250600390805190602001906101439291906101b3565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051809050600060405180830381858888f1935050505015156101ac5760006000fd5b5b50610258565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101f457805160ff1916838001178555610222565b82800160010185558215610222579182015b82811115610221578251825591602001919060010190610206565b5b50905061022f9190610233565b5090565b61025591905b80821115610251576000816000905550600101610239565b5090565b90565b6102c8806102676000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806325e8ab5814610051578063a0fadd97146100ea578063c5d49bed1461013c575bfe5b341561005957fe5b61006161018e565b60405180806020018281038252838181518152602001915080519060200190808383600083146100b0575b8051825260208311156100b05760208201915060208101905060208303925061008c565b505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156100f257fe5b6100fa610237565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561014457fe5b61014c61025d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610196610288565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561022c5780601f106102015761010080835404028352916020019161022c565b820191906000526020600020905b81548152906001019060200180831161020f57829003601f168201915b505050505090505b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b90565b6020604051908101604052806000815250905600a165627a7a72305820779470f1f747181a839f6a0e27222b2f0cdd3144d67aed67094d09dc233060dc0029";

Template.sendEther.onCreated(function helloOnCreated() {
  
});

Template.sendEther.helpers({
  currentBlock(){
	 return EthBlocks.latest.number;
  },

});

Template.sendEther.events({
  'click #send'(event, instance) {
    let sender = web3.eth.accounts[0];
    let receiver = $('#receiver').val();
    let amount = $('#amount').val();

    web3.eth.getBalance(receiver, function(error,result){
      if(!error){
        console.log("Before transfer: " + result);
      }else{
        console.log(error);
      }
    });
    console.log(receiver+"  "+sender);

    //deploy new contract, the callback function will execute twice
    var newContract = payontime.new(receiver,{data:bytecode, from:sender, value:amount},function(err,result){
      if(!err){
        console.log(newContract);
        if(!result.address) {
           console.log(result.transactionHash); // The hash of the transaction, which deploys the contract
       // check address on the second call (contract deployed)
        } else {
          var addr = result.address;
          console.log(addr);
          web3.eth.getBalance(receiver, function(error,result){
            if(!error){
              console.log("After transfer: " + result);
            }else{
              console.log(error);
            }
          });
          // Meteor.call('tasks.insert', addr, function(err,result){
          //   if(err){
          //     console.log(err);
          //   }
          // });
        }
      }else{
        console.log(err);
      }
    });  
  }
});
